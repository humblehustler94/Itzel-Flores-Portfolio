/* styles.css with variables ran original styles through chat gbt for variables*/
:root {
    --primary-color: #357b70;
    --secondary-color: #e0b354;
    --dark-grey: #2b2b2b;
    --visited-color: #05676e;
    --active-color: #489c79;
    --white-color: #ffffff;
    --font-family: 'Lato', sans-serif;
    --font-weight-normal: 400;
    --font-weight-bold: 700;
    --font-size-body: 16px;
    --font-size-h1: 30px;
    --font-size-h2: 24px;
    --font-size-h3: 18px;
    --line-height: 1.6;
    --padding: 20px;
    --border-width: 4px;
    --border-radius: 3px;
    --button-padding: 10px;
    --button-border-bottom: 2px solid rgba(0, 0, 0, 0.3);
    --transition-duration: 0.2s;
    --grid-gap: 20px;
    --grid-gap-small: 10px;
}

/* added in 1.6 */
* {
    box-sizing: border-box;
    width: 76;
    padding: var(--padding);
    border: var(--border-width);
}

/*standard css rules */
body {
    font-family: var(--font-family);
    font-weight: var(--font-weight-normal);
    font-size: var(--font-size-body);
    line-height: var(--line-height);
}

h1 {
    font-size: var(--font-size-h1);
    font-weight: var(--font-weight-bold);
}

h2 {
    font-size: var(--font-size-h2);
    font-weight: var(--font-weight-bold);
}

h3 {
    font-size: var(--font-size-h3);
    font-weight: var(--font-weight-bold);
}

/*add interactive elements & hover states css rules*/
/*update a with a var in css 1.8*/
a {
    color: var(--primary-color);
}

a:hover {
    text-decoration: none;
}

a:visited {
    color: var(--visited-color);
}

a:active {
    color: var(--active-color);
}

a:hover a:focus {
    text-decoration: none;
}

/*adding style to button 1.5*/
/*adding .button .button:hover and .button:focus 1.7*/
button,
.button,
.button2 {
    border: none;
    font-family: inherit;
    background-color: var(--primary-color);
    color: var(--white-color);
    text-decoration: none;
    padding: var(--button-padding);
    border-radius: var(--border-radius);
    border-bottom: var(--button-border-bottom);
}

button:hover,
button:focus,
.button:hover,
.button:focus {
    cursor: pointer;
    opacity: 0.8;
}

/* 1.7 add .button, button how to make a link look like a button*/
.button,
button {
    border: none;
    display: inline-block;
    font-family: inherit;
    background-color: var(--primary-color);
    color: var(--white-color);
    text-decoration: none;
    padding: var(--button-padding);
    border-radius: var(--border-radius);
    border-bottom: var(--button-border-bottom);
    transition: opacity var(--transition-duration);
}

/*adding css rules for secondary button 1.5*/
.button_secondary {
    background-color: var(--secondary-color);
    color: var(--dark-grey);
}

/*adding new css rule bem to nav block*/
.navigation-list__item--active {
    text-decoration: none;
}

/*css rules adding in 1.6*/
.profile_portrait {
    float: left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

/*CF code for profile need to find my own*/
.profile {
    max-width: 700px;
    margin: 0 auto;
}

.profile_text {
    flex: 1 1 100px;
}

.page-header {
    display: flex;
    width: 100%;
    padding: var(--padding);
}

.page-header__item {
    flex: 0 1 200px;
}

.page-header__item:last-child {
    flex-grow: 1;
    text-align: right;
}

.navigation-list {
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

/*adding css rules for grid 1.6*/
.grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: var(--grid-gap);
}

.grid__item {
    background-color: lightgrey;
}

.page-header__item:last-child {
    grid-column: 3/3;
    grid-row: 1/3;
}

/* other css rules applied in 1.6 to edit look of website*/
.contact {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

#contact {
    display: flex;
    justify-content: space-evenly;
    text-align: center;
}

#contact-form {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

span {
    background-color: var(--dark-grey);
    color: var(--secondary-color);
}

.about {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

#work {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

/* 1.7 css animations rule sets*/
@keyframes color-change {
    from {
        fill: #edc655;
    }

    to {
        fill: #f76414;
    }
}

.sun {
    animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
    from {
        transform: translate(0, 50px);
    }

    to {
        transform: translate(200px, 50px);
    }
}

.cloud-front {
    animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
    from {
        transform: translate(446px, 48px);
    }

    to {
        transform: translate(100px, 48px);
    }
}

.cloud-back {
    animation: 34s cloud-move-reverse infinite alternate linear;
}

/* 1.7 adding media query at the very end of css rules.  */
@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
        grid-gap: var(--grid-gap-small);
    }

    .grid_item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }

    h1 {
        font-size: 22px;
    }
}

@media all and (min-width: 500px) and (max-width: 750px) {
    .grid {
        grid-template-columns: 1fr, 1fr;
        grid-gap: var(--grid-gap-small);
    }

    .grid_item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }

    h1 {
        font-size: 22px;
    }
}

@media all and (max-width: 750px) {
    .grid {
        grid-gap: var(--grid-gap-small);
    }

    .grid_item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }

    h1 {
        font-size: 22px;
    }
}
